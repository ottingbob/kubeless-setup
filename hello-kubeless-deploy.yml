apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2020-03-27T00:18:31Z"
  generation: 1
  labels:
    created-by: kubeless
    function: hello
  name: hello
  namespace: default
  ownerReferences:
  - apiVersion: kubeless.io/v1beta1
    kind: Function
    name: hello
    uid: 08475c92-4c23-41b6-ac0f-ef22b5ef3bb3
  resourceVersion: "11779057"
  selfLink: /apis/apps/v1/namespaces/default/deployments/hello
  uid: 59d12a07-c9ec-4c31-9069-93d154830f88
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      created-by: kubeless
      function: hello
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        created-by: kubeless
        function: hello
    spec:
      containers:
      - env:
        - name: FUNC_HANDLER
          value: hello
        - name: MOD_NAME
          value: test
        - name: FUNC_TIMEOUT
          value: "180"
        - name: FUNC_RUNTIME
          value: python3.7
        - name: FUNC_MEMORY_LIMIT
          value: "0"
        - name: FUNC_PORT
          value: "8080"
        - name: KUBELESS_INSTALL_VOLUME
          value: /kubeless
        - name: PYTHONPATH
          value: $(KUBELESS_INSTALL_VOLUME)/lib/python3.7/site-packages:$(KUBELESS_INSTALL_VOLUME)
        image: kubeless/python@sha256:f65ebe571a8e657049ec75408df6f8538ffe49037418e45b611d07243612b1fd
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        name: hello
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /kubeless
          name: hello
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - echo '95878efef79d38603d604db5c237e63a1900f191e02ac2c1e4476bc14d706c5b  /src/test.py'
          > /tmp/func.sha256 && sha256sum -c /tmp/func.sha256 && cp /src/test.py /kubeless/test.py
          && cp /src/requirements.txt /kubeless
        command:
        - sh
        - -c
        image: kubeless/unzip@sha256:4863100364496255de9bf8722a220dad7143ab277ac72435876eb8c93936e9d7
        imagePullPolicy: IfNotPresent
        name: prepare
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /kubeless
          name: hello
        - mountPath: /src
          name: hello-deps
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: hello
      - configMap:
          defaultMode: 420
          name: hello
        name: hello-deps
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2020-03-27T00:18:47Z"
    lastUpdateTime: "2020-03-27T00:18:47Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2020-03-27T00:18:31Z"
    lastUpdateTime: "2020-03-27T00:18:47Z"
    message: ReplicaSet "hello-684fc6c65d" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
